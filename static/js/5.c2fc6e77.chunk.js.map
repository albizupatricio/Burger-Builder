{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","className","classes","Ingredient","key","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,4B,0GC2B7CC,EAxBD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,UAAWC,IAAQC,WACnBC,IAAKJ,EAAGJ,MAAOI,EAAGJ,KAFf,KAEuBI,EAAGH,OAF1B,QAKX,OACI,yBAAKI,UAAWC,IAAQG,OACpB,2CAAiBP,GACjB,qCAAU,uCAAaQ,OAAOC,WAAWf,EAAMgB,OAAOC,QAAQ,O,wCCdpEC,E,kLAGEC,KAAKnB,MAAMoB,cAAcD,KAAKnB,MAAMqB,MAAOF,KAAKnB,MAAMsB,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MASb,OARKL,KAAKnB,MAAMyB,UACZF,EAASJ,KAAKnB,MAAMuB,OAAOhB,KAAI,SAAAR,GAAK,OAChC,kBAACc,EAAD,CACID,IAAKb,EAAM2B,GACXzB,YAAaF,EAAME,YACnBe,MAAOjB,EAAMiB,YAIrB,6BACKO,O,GAlBII,aAuCNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAM9B,MAAMwB,OACpBE,QAASI,EAAM9B,MAAM0B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAI/DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.c2fc6e77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3uRBg\",\"Ingredient\":\"Order_Ingredient__1fw7r\"};","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            className={classes.Ingredient}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default order;","import React, { Component } from \"react\";\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ));\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}