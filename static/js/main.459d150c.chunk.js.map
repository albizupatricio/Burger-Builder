{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","Navigation/Toolbar/Toolbar.module.css","Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/Order.module.css","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","Navigation/NavigationItems/NavigationItems.module.css","Navigation/SideDrawer/DrawerToogle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","Navigation/NavigationItems/NavigationItem/NavigationItem.js","Navigation/NavigationItems/NavigationItems.js","Navigation/SideDrawer/DrawerToogle/DrawerToggle.js","Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","auxiliary","props","children","logo","className","classes","Logo","style","heigth","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxiliary","closed","join","layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToogleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Tomato","builder","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","index","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","bind","ingredientRemoved","OrderButton","purchaseable","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinue","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummary","burger","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedhandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","amount","ingredientOutput","ig","Ingredient","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","App","Layout","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","tomato","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burderBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.459d150c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3SCF0\",\"BreadTop\":\"BurgerIngredient_BreadTop__1OU4H\",\"Seeds1\":\"BurgerIngredient_Seeds1__2Wbov\",\"Seeds2\":\"BurgerIngredient_Seeds2__1aH0T\",\"Tomato\":\"BurgerIngredient_Tomato__1ptik\",\"Meat\":\"BurgerIngredient_Meat__M_ghl\",\"Cheese\":\"BurgerIngredient_Cheese__3fiFq\",\"Salad\":\"BurgerIngredient_Salad__8Uoox\",\"Bacon\":\"BurgerIngredient_Bacon__2WZI6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__IwjFS\",\"Open\":\"SideDrawer_Open__ftxb-\",\"Close\":\"SideDrawer_Close__2e8yy\",\"Logo\":\"SideDrawer_Logo__2bfe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2zpcq\",\"Label\":\"BuildControl_Label__3SjG4\",\"Less\":\"BuildControl_Less__2ONnA\",\"More\":\"BuildControl_More__3DVOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__32Ywr\",\"Label\":\"Input_Label__29vW8\",\"InputElement\":\"Input_InputElement__27KkD\",\"Invalid\":\"Input_Invalid__OVhJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__yKRCw\",\"Logo\":\"Toolbar_Logo__CemBJ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__11Ozz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2Dse4\",\"active\":\"NavigationItem_active__2Q0RW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2t4H4\",\"OrderButton\":\"BuildControls_OrderButton__1HsnW\",\"enable\":\"BuildControls_enable__CntUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2CsPh\",\"Success\":\"Button_Success__1FInz\",\"Danger\":\"Button_Danger__3zI53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3uRBg\",\"Ingredient\":\"Order_Ingredient__1fw7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__hrgK-\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__16VZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__34sym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3wxDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__QvsqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1q_di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__x_-iz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2TBdR\",\"load2\":\"Spinner_load2__vjANS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3egoK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2EgXb\"};","const auxiliary = (props) => props.children;\r\n\r\nexport default auxiliary;","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{heigth: props.heigth}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css'\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css'\r\n\r\nconst drawerToggle = (props) => (\r\n    <div\r\n        className={classes.DrawerToggle}\r\n        onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../components/Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToogle from '../SideDrawer/DrawerToogle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToogle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../components/Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\n\r\nimport classes from './SideDrawer.module.css';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Auxiliary>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Auxiliary>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\n\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        });\r\n    }\r\n\r\n    sideDrawerToogleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToogleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n        let ingredient = null;\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            case ('tomato'):\r\n                ingredient = <div className={classes.Tomato}></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst builder = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, index) => {\r\n                return <BurgerIngredient key={igKey + index} type={igKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default builder;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            className={classes.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>Less</button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Tomato', type: 'tomato' }\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map((ctrl) => (\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={props.ingredientAdded.bind(this, ctrl.type)}\r\n                removed={props.ingredientRemoved.bind(this, ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show ||\r\n            nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        disabled={props.disabled}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    //This could be a functional component, desn't have to  be a class component.\r\n    componentWillUpdate() {\r\n        console.log('[Order Summary} willUpdate');\r\n    }\r\n\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                    </li>\r\n                );\r\n            });\r\n        return (\r\n            <Auxiliary>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button\r\n                    btnType=\"Danger\"\r\n                    clicked={this.props.purchaseCancelled}\r\n                >CANCEL</Button>\r\n                <Button\r\n                    btnType=\"Success\"\r\n                    clicked={this.props.purchaseContinue}\r\n                >CONTINUE</Button>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    //Class factory (anonymous class)\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Auxiliary>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Auxiliary>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-94228.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios-orders';\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing: true\r\n        });\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing: false\r\n        });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchased();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Auxiliary>\r\n                    <Burger ingredients={this.props.ings}></Burger>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price} />\r\n                </Auxiliary>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinue={this.purchaseContinueHandler}\r\n                ingredients={this.props.ings}\r\n                price={this.props.price} />;\r\n        }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchased: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n       type: actionTypes.FETCH_INGREDIENTS_FAILED \r\n    }\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-94228.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT'; \r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json', orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    }\r\n};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button\r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}  \r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}  \r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement =\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value} \r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option\r\n                            key={option.value}\r\n                            value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>;\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}  \r\n                onChange={props.changed}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input} >\r\n            <label className={classes.Label} >{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' },\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        };\r\n        this.props.onOrderBurger(order);\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedhandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({\r\n            orderForm: updatedOrderForm,\r\n            formIsValid: formIsValid\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={event => this.inputChangedhandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                {summary}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            className={classes.Ingredient}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default order;","import React, { Component } from \"react\";\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ));\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <Switch>\n                        <Route path=\"/checkout\" component={Checkout} />\n                        <Route path=\"/orders\" exact component={Orders} />\n                        <Route path=\"/\" exact component={BurgerBuilder} />\n                    </Switch>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n    tomato: 0.5\r\n};\r\n\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    };\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        totalPrice: 4,\r\n        error: false\r\n    });\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state, action);\r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state, action);\r\n\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state, action);\r\n\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientsFailed(state, action);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state) => {\r\n    return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        orders: state.orders.concat(updateObject(action.orderData, { id: action.orderId })),\r\n        purchased: true\r\n    });\r\n};\r\n\r\nconst purchaseBurgerFail = (state) => {\r\n    return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchOrdersFail = (state) => {\r\n    return updateObject(state, { loading: false });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state);\r\n\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state);\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state);\r\n\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrdersStart(state);\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return fetchOrdersSuccess(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrdersFail(state);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burderBuilderReducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burderBuilderReducer,\n    order: orderReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(\n    app,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}